# Sample printer.cfg configuration file

# Mainsail
[include mainsail.cfg]

# This file contains all settings for KAMP, and must be included in printer.cfg with:
[include KAMP_Settings.cfg]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu expander]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_070005801943564636373420-if00
restart_method: command

# ADXL345 connected to a Klipperized Pi Pico (RP2040)
#[include accelerometer.cfg]
# TEST_RESONANCES axis=x

# Testing with resonance_holder.py
# https://gist.github.com/kmobs/f6def5db272ca5c1b81727482f53bed8
# HOLD_RESONANCE AXIS=<axis> FREQ=int SECONDS=<seconds>
#[resonance_holder]

# AndrewEllis93 Print Tuning Guide Speed Test Macros
#[include test_speed.cfg]

#[output_pin mosfet0]
#pin: expander:PA0
#pwm: true
#cycle_time: 0.010
#value: 0
#shutdown_value: 0

# Status LED lights when klipper connects 
[static_digital_output onboardLED]
pins: !expander:PA4

[heater_fan hotend_fan]
pin: expander:PA3
max_power: 1.0
#kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
# If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0
shutdown_speed: 1.0

[temperature_fan case_fan]
pin: expander:PA2
control: watermark # This is the hysteresis we will use instead of pid.
max_delta: 3.0 # How much to go over/under target temp before toggling the fan
shutdown_speed: 1.0 # Turn the fan on at max if an error causes shutdown
sensor_type: temperature_mcu
min_temp: 0 # min/max are just for sanity checks to detect a malfunctioning sensor
max_temp: 100
target_temp: 40.0 # The temperature at which to toggle the fan

# Gantry fan
[fan_generic extruder_partfan]
pin: expander:PA1

[gcode_macro M106]
rename_existing: M106.1
gcode:
  {% set fanspeed = 255 %}
  {% if params.S is defined %}
    {% set fanspeed = params.S|int %}
  {% endif %}
  {% if fanspeed < 0 or fanspeed > 255 %}
    M106.1 S255
    SET_FAN_SPEED FAN=extruder_partfan SPEED=1
    RESPOND TYPE=error MSG="Invalid fan speed value"
  {% endif %}
  {% if fanspeed == 255 %}
    SET_FAN_SPEED FAN=extruder_partfan SPEED=1
  {% else %}
    SET_FAN_SPEED FAN=extruder_partfan SPEED=0
  {% endif %}
  M106.1 S{ fanspeed }

[gcode_macro M107]
rename_existing: M107.1
gcode:
    SET_FAN_SPEED FAN=extruder_partfan SPEED=0
    M107.1

# Sovol SV01 Pro frame and kinematics
[include ./sv01pro/printer-sovol-sv01-pro.cfg]

## Tool Head
# Sovol Planetary tool head conversion
[include ./sv01pro/tool_head_sovol_planetary_high_flow.cfg]

# Stepper current
[include ./stepper_uart.cfg]

## Extruder and hot end modifications
[extruder]
nozzle_diameter: 1.0 # Unfortunately this can't be readily changed in G code passed from the slicer, setting it to the biggest nozzle I have at the moment.

# UNSAFE SETTING - DO NOT LEAVE ENABLED IN NORMAL OPERATION
# min_extrude_temp: 0 # Allow cold extrusion, done with the nozzle removed, for rotation_distance calibration.

#[input_shaper]
#shaper_freq_x: 44.8
#shaper_type_x: mzv # 5900 mm/s²
#shaper_freq_y: 37.8
#shaper_type_y: zv # 5500 mm/s²

[printer]
# Stock Sovol Marlin has default speed limits at 500, 500, 5, and 25 mm/s for X, Y, Z, and E respectively.
# Similarly, default acceleration limits are set as 500, 500, 100, and 5000 mm/s² for X, Y, Z, and E respectively.
# Comment says these can be overridden using G-codes M201 and M203, meaning there are effectively no hard-coded,
# immutable limits for speeds or accelerations in the factory firmware, so some values below are going to be 
# somewhat arbitrary.

# SV07 runs 12000 by default, the 25 minute benchy for it 8000
max_velocity: 350
max_accel: 4000
#max_accel_to_decel:5000 # default is max_accel / 2

# Printer calibration
[extruder]
rotation_distance: 4.59
pressure_advance:0.02
pressure_advance_smooth_time:0.035

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor expander]
sensor_type: temperature_mcu
sensor_mcu: expander
min_temp: 10
max_temp: 100

[bltouch]
#z_offset: 0.5

# DGUS touchscreen firmware
# Requires using the gbkwiatt Klipper fork https://github.com/gbkwiatt/klipper
# and DWIN_SET firmware from https://github.com/fryc88/klipper-sv06plus-screen
[include ./sv01pro/touchscreen-t5uid1.cfg]

# Object exclusion
[exclude_object]

# Moonraker
[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes

#[force_move]
#enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    M220 S100 ;Reset Feedrate
    M221 S100 ;Reset Flowrate
    
    {% if params.CHAMBER|int > 0 %}
      RESPOND PREFIX= MSG="Heating bed to 115°C"
      M190 S115           ; Heat the chamber!
      RESPOND PREFIX= MSG="Waiting for enclosure to reach { params.CHAMBER }°C"
      M117 Wait for enclosure { params.CHAMBER }°C
      TEMPERATURE_WAIT SENSOR="temperature_sensor extruder" MINIMUM={ params.CHAMBER }
      RESPOND PREFIX= MSG="Enclosure at '{ params.CHAMBER }'°C"
      M117
      M109 S130      ; set extruder final temp
    {% else %}
      {% if params.BED %}
        M140 S{ params.BED }           ; set bed final temp
      {% endif %}

      {% if params.HOTEND %}
        M109 S130        ; set extruder final temp
      {% endif %}
      {% if params.EXTRUDER %}
        M109 S130      ; set extruder final temp
      {% endif %}
    {% endif %}

    {% if params.BED %}
      M190 S{ params.BED }           ; set bed final temp
    {% endif %}
    
    G28
    BED_MESH_CALIBRATE     ; Remplacement KAMP de G29
    
    G92 E0 ;Reset Extruder
    
    {% if params.HOTEND %}
    M104 S{ params.HOTEND }        ; set extruder final temp
    {% endif %}
    {% if params.EXTRUDER %}
    M104 S{ params.EXTRUDER }      ; set extruder final temp
    {% endif %}
    
    SMART_PARK
    
    {% if params.HOTEND %}
      M109 S{ params.HOTEND }        ; set extruder final temp
    {% endif %}
    {% if params.EXTRUDER %}
      M109 S{ params.EXTRUDER }      ; set extruder final temp
    {% endif %}
    {% if params.BED %}
      M190 S{ params.BED }           ; set bed final temp
    {% endif %}
    
    LINE_PURGE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G91 ;Relative positioning
    G1 E-5 F2700 ;Retract a bit
    G1 E-15 X20 Y20 Z20 F2400 ; Wipe out, retract and raise Z
    G90 ;Absolute positioning
    G1 X0 Y240 ;Present print
    M107                           ; turn off fan
    TURN_OFF_HEATERS
    BED_MESH_CLEAR

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 0.570
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.133
#*# pid_ki = 1.392
#*# pid_kd = 858.114
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.506
#*# pid_ki = 1.093
#*# pid_kd = 87.044
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.262500, -0.127500, -0.060000
#*# 	-0.260000, -0.132500, -0.030000
#*# 	-0.310000, -0.170000, -0.080000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 125.3
#*# max_x = 164.68
#*# min_y = 93.34
#*# max_y = 146.66
